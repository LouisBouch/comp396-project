
/*
 * This source file was generated by the Gradle 'init' task
 */
package lib;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeEach;
import static org.junit.jupiter.api.Assertions.*;

public class QuaternionTest {
  @BeforeEach
  public void setup() {
    // System.out.println("Vector3D tests");
  }

  // Tests the self.mulQuaternion method
  @Test
  public void testMultQuaternionSelf() {
    // Positive values
    Quaternion q1 = new Quaternion(5, new Vector3D(5, 10, 23.7));
    Quaternion q2 = new Quaternion(3.2, new Vector3D(15, 1, 42));
    q1.mulQuaternion(q2);
    assertEquals(-1064.4, q1.getScalar());
    assertEquals(487.3, q1.getI());
    assertEquals(182.5, q1.getJ());
    assertEquals(140.84000000000003, q1.getK());
  }

  // Tests the static mulQuaternion method
  @Test
  public void testMultQuaternionStatic() {
    // Positive values
    Quaternion q1 = new Quaternion(5, new Vector3D(5, 10, 23.7));
    Quaternion q2 = new Quaternion(3.2, new Vector3D(15, 1, 42));
    q1 = Quaternion.mulQuaternion(q1, q2);
    assertEquals(-1064.4, q1.getScalar());
    assertEquals(487.3, q1.getI());
    assertEquals(182.5, q1.getJ());
    assertEquals(140.84000000000003, q1.getK());
  }

  // Tests the self.mulQuaternionReverse method
  @Test
  public void testMultQuaternionReverseSelf() {
    // Positive values
    Quaternion q1 = new Quaternion(5, new Vector3D(5, 10, 23.7));
    Quaternion q2 = new Quaternion(3.2, new Vector3D(15, 1, 42));
    q2.mulQuaternionReverse(q1);
    assertEquals(-1064.4, q2.getScalar());
    assertEquals(487.3, q2.getI());
    assertEquals(182.5, q2.getJ());
    assertEquals(140.84000000000003, q2.getK());
  }
  // Tests the fromAxisAngle method
  @Test
  public void testFromAxisAngle() {
    // Positive values
    Quaternion q = Quaternion.fromAxisAngle(2.1, new Vector3D(46, 22, 86));
    assertEquals(0.49757104789172696, q.getScalar());
    assertEquals(0.39909451065886653, q.getI());
    assertEquals(0.19087128770641443, q.getJ());
    assertEquals(0.7461332155796201, q.getK());
  }
}
